# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 16db79a38308cd2df2451f19fd4b0ab841549c4c4ab4edd00f671007d37c2115 # shrinks to mut constellation = Constellation { arena: [StarNode { star: Star { representation: Affine { basis: [[1.0, 0.0, 0.0, 0.0, 0.0],  [0.0, 1.0, 0.0, 0.0, 0.0],  [0.0, 0.0, 1.0, 0.0, 0.0],  [0.0, 0.0, 0.0, 1.0, 0.0],  [0.0, 0.0, 0.0, 0.0, 1.0]], shape=[5, 5], strides=[5, 1], layout=Cc (0x5), const ndim=2, shift: [0.0, 0.0, 0.0, 0.0, 0.0], shape=[5], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { halfspaces: Inequality { coeffs: [[-1.0, -0.0, -0.0, -0.0, -0.0],  [-0.0, -1.0, -0.0, -0.0, -0.0],  [-0.0, -0.0, -1.0, -0.0, -0.0],  [-0.0, -0.0, -0.0, -1.0, -0.0],  [-0.0, -0.0, -0.0, -0.0, -1.0],  [1.0, 0.0, 0.0, 0.0, 0.0],  [0.0, 1.0, 0.0, 0.0, 0.0],  [0.0, 0.0, 1.0, 0.0, 0.0],  [0.0, 0.0, 0.0, 1.0, 0.0],  [0.0, 0.0, 0.0, 0.0, 1.0]], shape=[10, 5], strides=[5, 1], layout=Cc (0x5), const ndim=2, rhs: [-0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0], shape=[10], strides=[1], layout=CFcf (0xf), const ndim=1 } }) }, dnn_index: DNNIndex { layer: None, remaining_steps: None }, star_cdf: None, output_bounds: None, is_feasible: true }], children: [None], cdf: [], loc: [0.0, 0.0, 0.0, 0.0, 0.0], shape=[5], strides=[1], layout=CFcf (0xf), const ndim=1, scale: [[0.0, 0.0, 0.0, 0.0, 0.0],  [0.0, 0.0, 0.0, 0.0, 0.0],  [0.0, 0.0, 0.0, 0.0, 0.0],  [0.0, 0.0, 0.0, 0.0, 0.0],  [0.0, 0.0, 0.0, 0.0, 0.0]], shape=[5, 5], strides=[5, 1], layout=Cc (0x5), const ndim=2, dnn: DNN { layers: [Dense(Affine { basis: [[0.0, 0.0, 0.0, 0.0, 0.0]], shape=[1, 5], strides=[5, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[0.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[0.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[0.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[0.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[0.0],  [0.0],  [0.0],  [0.0],  [0.0]], shape=[5, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [9.451149942680527, 0.0, 0.0, 0.0, 0.0], shape=[5], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(5)] }, input_bounds: Some(Bounds { data: [[0.0, 0.0, 0.0, 0.0, 0.0],  [0.0, 0.0, 0.0, 0.0, 0.0]], shape=[2, 5], strides=[5, 1], layout=Cc (0x5), const ndim=2 }) }
cc 512714ebe68a9f2b762e600f7c40acbdc3159af57db1b71ed2289b981ac2aace # shrinks to mut constellation = Constellation { arena: [StarNode { star: Star { representation: Affine { basis: [[1.0, 0.0],  [0.0, 1.0]], shape=[2, 2], strides=[2, 1], layout=Cc (0x5), const ndim=2, shift: [0.0, 0.0], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { halfspaces: Inequality { coeffs: [[-1.0, -0.0],  [-0.0, -1.0],  [1.0, 0.0],  [0.0, 1.0]], shape=[4, 2], strides=[2, 1], layout=Cc (0x5), const ndim=2, rhs: [-0.0, -0.0, 0.0, 0.0], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1 } }) }, dnn_index: DNNIndex { layer: None, remaining_steps: None }, star_cdf: None, output_bounds: None, is_feasible: true }], children: [None], cdf: [], loc: [0.0, 0.0], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1, scale: [[0.0, 0.0],  [0.0, 0.0]], shape=[2, 2], strides=[2, 1], layout=Cc (0x5), const ndim=2, dnn: DNN { layers: [Dense(Affine { basis: [[0.0, 0.0]], shape=[1, 2], strides=[2, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[0.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [8.988820660515433], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[3.2407372710057203],  [0.0]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0, 0.0], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(2)] }, input_bounds: Some(Bounds { data: [[0.0, 0.0],  [0.0, 0.0]], shape=[2, 2], strides=[2, 1], layout=Cc (0x5), const ndim=2 }) }
cc 7b6ea2198c92a52baad16d94c4c7c72ffc62f23fbb41c6d540367601587f5b58 # shrinks to mut constellation = Constellation { arena: [StarNode { star: Star { representation: Affine { basis: [[1.0, 0.0, 0.0, 0.0],  [0.0, 1.0, 0.0, 0.0],  [0.0, 0.0, 1.0, 0.0],  [0.0, 0.0, 0.0, 1.0]], shape=[4, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, shift: [0.0, 0.0, 0.0, 0.0], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { halfspaces: Inequality { coeffs: [[-1.0, -0.0, -0.0, -0.0],  [-0.0, -1.0, -0.0, -0.0],  [-0.0, -0.0, -1.0, -0.0],  [-0.0, -0.0, -0.0, -1.0],  [1.0, 0.0, 0.0, 0.0],  [0.0, 1.0, 0.0, 0.0],  [0.0, 0.0, 1.0, 0.0],  [0.0, 0.0, 0.0, 1.0]], shape=[8, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, rhs: [0.000035000000000000004, 30.07345667189705, 0.21939354362274338, 3.4986687169911814, 0.000035000000000000004, 30.07345667189705, 0.21939354362274338, 3.4986687169911814], shape=[8], strides=[1], layout=CFcf (0xf), const ndim=1 } }) }, dnn_index: DNNIndex { layer: None, remaining_steps: None }, star_cdf: None, output_bounds: None, is_feasible: true }], children: [None], cdf: [], loc: [0.0, 0.0, 0.0, 0.0], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1, scale: [[0.00001, 0.0, 0.0, 0.0],  [0.0, 8.592416191970585, 0.0, 0.0],  [0.0, 0.0, 0.0626838696064981, 0.0],  [0.0, 0.0, 0.0, 0.9996196334260519]], shape=[4, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, dnn: DNN { layers: [Dense(Affine { basis: [[-5.068146854125599, 0.2554714784107439, 7.284440645182073, -2.6953126808677297],  [-3.841471052193035, 9.26258277237315, -5.354065960638681, 3.764360927075554],  [8.895635669235332, 5.587642217923801, -6.157548166054729, -7.536184055261499],  [6.910001860419648, -3.2242356528713145, -9.25774440556193, 0.32356716469098323]], shape=[4, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, shift: [4.801022238682201, -3.483411686957405, -4.1513760015923, 6.9787738637400665], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(4), Dense(Affine { basis: [[3.0241619546170018, -6.572723195940369, -9.884440169088919, 5.011336405664487],  [2.0236973104025058, -4.874085972169571, -0.39454848838746415, 9.300917854478321],  [-5.511464633126333, 4.242360562320897, 0.0810559349397657, 6.745276134252215]], shape=[3, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, shift: [7.607982606118355, 8.145346014465208, 2.480675754671937], shape=[3], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(3), Dense(Affine { basis: [[0.8969591690482925, 9.160443622068879, 8.648512666040912],  [1.521942336318439, -1.2701948559065457, 3.940946582512815]], shape=[2, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, shift: [-0.5395398267146145, -0.7979486067265729], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(2)] }, input_bounds: Some(Bounds { data: [[-0.000035000000000000004, -30.07345667189705, -0.21939354362274338, -3.4986687169911814],  [0.000035000000000000004, 30.07345667189705, 0.21939354362274338, 3.4986687169911814]], shape=[2, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2 }) }
cc 6d78bba6ce64ebdf3945478ed6ecc0bcd6e4267323f3c96fe09b484a20113776 # shrinks to mut constellation = Constellation { arena: [StarNode { star: Star { representation: Affine { basis: [[1.0, 0.0, 0.0],  [0.0, 1.0, 0.0],  [0.0, 0.0, 1.0]], shape=[3, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, shift: [0.0, 0.0, 0.0], shape=[3], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { halfspaces: Inequality { coeffs: [[-1.0, -0.0, -0.0],  [-0.0, -1.0, -0.0],  [-0.0, -0.0, -1.0],  [1.0, 0.0, 0.0],  [0.0, 1.0, 0.0],  [0.0, 0.0, 1.0]], shape=[6, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, rhs: [0.000035000000000000004, 0.000035000000000000004, 32.870177916674514, 0.000035000000000000004, 0.000035000000000000004, 32.870177916674514], shape=[6], strides=[1], layout=CFcf (0xf), const ndim=1 } }) }, dnn_index: DNNIndex { layer: None, remaining_steps: None }, star_cdf: None, output_bounds: None, is_feasible: true }], children: [None], cdf: [], loc: [0.0, 0.0, 0.0], shape=[3], strides=[1], layout=CFcf (0xf), const ndim=1, scale: [[0.00001, 0.0, 0.0],  [0.0, 0.00001, 0.0],  [0.0, 0.0, 9.391479404764146]], shape=[3, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, dnn: DNN { layers: [Dense(Affine { basis: [[0.0, 0.0, 0.0],  [0.0, 0.0, 0.0],  [0.0, 0.0, -0.8482383210841071]], shape=[3, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, shift: [0.0, 0.0, 0.0], shape=[3], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(3), Dense(Affine { basis: [[0.0, 0.0, 0.0],  [0.0, 0.7175034283549042, -3.2753661193891004],  [0.0, 0.0, 0.0]], shape=[3, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, shift: [2.783386034569082, 0.0, 0.0], shape=[3], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(3), Dense(Affine { basis: [[0.0, 0.0, 0.0],  [0.0, 0.0, -9.659476750957271],  [8.490418840885457, 4.146121298655196, 7.270369704932026],  [3.114995299247095, 5.967701273727165, -9.268944218405636]], shape=[4, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, shift: [-0.8696331606604844, 2.797190119147924, -6.362469962663675, 8.52710828509036], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(4), Dense(Affine { basis: [[5.956287705887773, -8.806416695841378, -0.6646469484320896, 8.473170505961125],  [8.642797133180476, -0.49911625132195603, -9.165448969985942, 3.498557049973723],  [-1.7003840075065604, -3.972599776871668, -6.195758456748863, 3.847553751705938]], shape=[3, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, shift: [-4.285889470875337, -1.2369346216542887, 9.433259476236131], shape=[3], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(3)] }, input_bounds: Some(Bounds { data: [[-0.000035000000000000004, -0.000035000000000000004, -32.870177916674514],  [0.000035000000000000004, 0.000035000000000000004, 32.870177916674514]], shape=[2, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2 }) }
cc 7b8247cdb3e997dc563aaea99049bc02a46d4a2851a2519b6e23b731fde3350d # shrinks to mut constellation = Constellation { arena: [StarNode { star: Star { representation: Affine { basis: [[1.0, 0.0, 0.0, 0.0],  [0.0, 1.0, 0.0, 0.0],  [0.0, 0.0, 1.0, 0.0],  [0.0, 0.0, 0.0, 1.0]], shape=[4, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, shift: [0.0, 0.0, 0.0, 0.0], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { halfspaces: Inequality { coeffs: [[-1.0, -0.0, -0.0, -0.0],  [-0.0, -1.0, -0.0, -0.0],  [-0.0, -0.0, -1.0, -0.0],  [-0.0, -0.0, -0.0, -1.0],  [1.0, 0.0, 0.0, 0.0],  [0.0, 1.0, 0.0, 0.0],  [0.0, 0.0, 1.0, 0.0],  [0.0, 0.0, 0.0, 1.0]], shape=[8, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, rhs: [16.077212783779313, 26.508667581095505, 3.5666245670388523, 2.627672819813027, 3.1959617075891904, 7.965352910702908, 22.054665112963704, 8.22413161303678], shape=[8], strides=[1], layout=CFcf (0xf), const ndim=1 } }) }, dnn_index: DNNIndex { layer: None, remaining_steps: None }, star_cdf: None, output_bounds: None, is_feasible: true }], children: [None], cdf: [], loc: [-6.440625538095062, -9.271657335196299, 9.244020272962427, 2.7982293966118768], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1, scale: [[2.753310641624072, 0.0, 0.0, 0.0],  [0.0, 4.924860070256916, 0.0, 0.0],  [0.0, 0.0, 3.6601842400003655, 0.0],  [0.0, 0.0, 0.0, 1.5502577761214011]], shape=[4, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, dnn: DNN { layers: [Dense(Affine { basis: [[-4.679405294308583, -6.9353980413893535, 0.05604732454760253, -1.4732389689078396],  [-8.472655043767983, 0.26887534252372447, -6.054657087131403, -8.218208084129168],  [-9.4947236949594, 2.1082229264023855, -7.09339449663287, -4.649209682108988],  [-9.472088407621202, 1.9387000041573188, 5.768612637962471, 3.0767095821029766]], shape=[4, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, shift: [1.981558948046093, 3.0178801384355403, 0.7579580894389046, 3.2125133174877654], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(4), Dense(Affine { basis: [[6.602316001958997, 9.226907211954511, -2.143734918213114, 1.0009880001435434],  [-4.780835709233036, 4.63609839668508, -5.642378706450293, 0.044975252409535926],  [0.15137477722840487, -6.044679026657462, 0.9164545202362184, 9.982955000584926]], shape=[3, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2, shift: [-1.4049324392938, -9.956518460801744, 0.04279954262932151], shape=[3], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(3), Dense(Affine { basis: [[-1.9164477137557014, 8.092566242839816, 4.076316926912122],  [-1.466010433750636, -4.385939999999544, -9.440675293925423],  [-4.193847436172882, -9.918805245881517, 7.780686216268794],  [3.0458293223735957, -8.357217083990198, -8.691332853230445]], shape=[4, 3], strides=[3, 1], layout=Cc (0x5), const ndim=2, shift: [-6.915042886690572, 6.885572710589791, 0.0849225439660728, -4.009094302151426], shape=[4], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(4), Dense(Affine { basis: [[-6.107400546593347, 4.637073140774728, -0.4664450428900615, 8.128837571515017]], shape=[1, 4], strides=[4, 1], layout=CFcf (0xf), const ndim=2, shift: [8.130452758718544], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1)] }, input_bounds: Some(Bounds { data: [[-16.077212783779313, -26.508667581095505, -3.5666245670388523, -2.627672819813027],  [3.1959617075891904, 7.965352910702908, 22.054665112963704, 8.22413161303678]], shape=[2, 4], strides=[4, 1], layout=Cc (0x5), const ndim=2 }) }
