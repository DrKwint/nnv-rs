# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc a381e12b1f0cdfcee763328ac00d6d72693f95bd8d81d79ca134dc60f045b118 # shrinks to mut constellation = Constellation { arena: [StarNode { star: Star { representation: Affine { basis: [[1.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { halfspaces: Inequality { coeffs: [[-1.0],  [1.0]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, rhs: [29.934300921695012, 29.934300921695012], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1 } }) }, dnn_index: DNNIndex { layer: None, remaining_steps: None }, star_cdf: None, local_bounds: None, output_bounds: None, is_feasible: true }], children: [None], cdf: [None], loc: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1, scale: [[8.552657406198575]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, dnn: DNN { layers: [Dense(Affine { basis: [[-1.5431394326665462]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[3.7228715219085107]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.5046579277856509], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1)] }, input_bounds: Some(Bounds { data: [[-29.934300921695012],  [29.934300921695012]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2 }) }
