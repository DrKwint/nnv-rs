# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc ea6643d6e4131b273dae4567e1b0dbc8ef2e08b2e2ac534176f1f8ec3d361c60 # shrinks to input_star = Star { representation: Affine { basis: [[-3.066715871777106, -1.886834826510917],  [-6.254849245022562, -7.951203484869724]], shape=[2, 2], strides=[2, 1], layout=Cc (0x5), const ndim=2, shift: [0.0, 0.0], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { coeffs: [[0.0, 0.0]], shape=[1, 2], strides=[2, 1], layout=CFcf (0xf), const ndim=2, rhs: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }) }, dnn = DNN { graph: Graph { representation_ops:  	(RepresentationId { representation_node_id: 3, operation_step: None }, 2) 	(RepresentationId { representation_node_id: 5, operation_step: None }, 4) 	(RepresentationId { representation_node_id: 6, operation_step: None }, 5) 	(RepresentationId { representation_node_id: 1, operation_step: None }, 0) 	(RepresentationId { representation_node_id: 4, operation_step: None }, 3) 	(RepresentationId { representation_node_id: 2, operation_step: None }, 1) operation_nodes:  	OperationNode { operation: Dense { aff: Affine { basis: [[0.0, 0.0]], shape=[1, 2], strides=[2, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 } }, inputs: [RepresentationId { representation_node_id: 0, operation_step: None }], outputs: [RepresentationId { representation_node_id: 1, operation_step: None }] } 	OperationNode { operation: ReLU { ndims: 1 }, inputs: [RepresentationId { representation_node_id: 1, operation_step: None }], outputs: [RepresentationId { representation_node_id: 2, operation_step: None }] } 	OperationNode { operation: Dense { aff: Affine { basis: [[0.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 } }, inputs: [RepresentationId { representation_node_id: 2, operation_step: None }], outputs: [RepresentationId { representation_node_id: 3, operation_step: None }] } 	OperationNode { operation: ReLU { ndims: 1 }, inputs: [RepresentationId { representation_node_id: 3, operation_step: None }], outputs: [RepresentationId { representation_node_id: 4, operation_step: None }] } 	OperationNode { operation: Dense { aff: Affine { basis: [[0.0],  [0.0]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0, 0.0], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1 } }, inputs: [RepresentationId { representation_node_id: 4, operation_step: None }], outputs: [RepresentationId { representation_node_id: 5, operation_step: None }] } 	OperationNode { operation: ReLU { ndims: 2 }, inputs: [RepresentationId { representation_node_id: 5, operation_step: None }], outputs: [RepresentationId { representation_node_id: 6, operation_step: None }] } }, input_representation_ids: [RepresentationId { representation_node_id: 0, operation_step: None }], output_representation_ids: [RepresentationId { representation_node_id: 6, operation_step: None }] }
