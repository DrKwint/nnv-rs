# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 2788d89884bebebcd738fd7314fb6530e857a29163fff2c16e2f345f4b8cd35c # shrinks to mut constellation = Constellation { arena: [StarNode { star: Star { representation: Affine { basis: [[1.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }, constraints: Some(Polytope { halfspaces: Inequality { coeffs: [[-1.0],  [1.0]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, rhs: [0.9593634148897077, -0.9592934148897077], shape=[2], strides=[1], layout=CFcf (0xf), const ndim=1 } }) }, dnn_index: DNNIndex { layer: None, remaining_steps: None }, star_cdf: None, local_bounds: None, output_bounds: None, is_feasible: true }], node_type: [None], loc: [-0.9593284148897077], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1, scale: [[0.00001]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, dnn: DNN { layers: [Dense(Affine { basis: [[-4.187435675378843]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.9257881337341889], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1), Dense(Affine { basis: [[0.0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, shift: [0.0], shape=[1], strides=[1], layout=CFcf (0xf), const ndim=1 }), ReLU(1)] }, input_bounds: Some(Bounds { data: [[-0.9593634148897077],  [-0.9592934148897077]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2 }) }
